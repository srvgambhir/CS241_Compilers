int binsearch (int* begin, int size, int x) {
	int L = 0;
	int R = 0;
	int m = 0;
	int r = 0;
	int result = 0;
	R = size - 1;
	result = L - 1;
	while (L <= R) {
		m = L + R;
		r = m % 2;

		if (r == 0) {
			m = m / 2;
		}
		else {
			m = m - 1;
			m = m / 2;
		}

		if (x == *(begin + m)) {
                        result = m;
			L = R + 1;
                }
                else {
                        if (*(begin + m) < x) {
                                L = m + 1;
                        }
                        else {
                                R = m - 1;
                        }
                }

	}
	return result;
}

int wain (int* begin, int size) {
        int final = 0;
        final = binsearch (begin, size, 5);
        return final;
}    
